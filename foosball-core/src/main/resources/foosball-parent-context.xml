<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
                           http://www.springframework.org/schema/tx
                           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
                           http://www.springframework.org/schema/context
                           http://www.springframework.org/schema/context/spring-context-3.0.xsd" >


    <!-- Load app settings from foosball-parent.properties on classpath -->
    <context:property-placeholder location="classpath:foosball-parent.properties" />

    <!-- Enable annotation configuration -->
    <context:annotation-config />

    <!-- Scan sample packages for Spring annotations -->
    <context:component-scan base-package="org.thlim"/>

    <bean id="c3p0PooledMysqlDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="driverClass" value="${hibernate.connection.driver_class}" />
        <property name="jdbcUrl" value="${hibernate.connection.url}" />
        <property name="user" value="${hibernate.connection.username}" />
        <property name="password" value="${hibernate.connection.password}" />
    </bean>

    <bean id="sessionFactory" class="org.springframework.orm.hibernate3.annotation.AnnotationSessionFactoryBean">
        <!-- Ref:http://forum.springsource.org/showthread.php?33960-sessionFactory-bean-can-t-read-entities-from-hibernate.cfg.xml-when-packaged-in-JAR -->
        <property name="dataSource">
            <ref bean="c3p0PooledMysqlDataSource" />
        </property>
        <property name="schemaUpdate" value="true" />
        <property name="packagesToScan" value="org.thlim.model"/>
        <property name="hibernateProperties">
            <props>
                <!--<prop key="hibernate.dialect">org.hibernate.dialect.HSQLDialect</prop>-->
                <prop key="hibernate.dialect">${hibernate.dialect}</prop>
                <prop key="hibernate.jdbc.fetch_size">100</prop>
                <prop key="hibernate.cache.region.factory_class">
                    net.sf.ehcache.hibernate.SingletonEhCacheRegionFactory
                </prop>
                <prop key="hibernate.cache.use_query_cache">true</prop>
            </props>
        </property>
        <property name="namingStrategy"><ref bean="namingStrategy"/></property>
    </bean>

    <bean id="namingStrategy" class="org.hibernate.cfg.ImprovedNamingStrategy"/>

    <!-- setup transaction manager	-->
    <bean id="transactionManager" class="org.springframework.orm.hibernate3.HibernateTransactionManager">
        <property name="sessionFactory">
            <ref bean="sessionFactory" />
        </property>
    </bean>

    <!-- ells Spring to put transactional advice on any class or method that has an @Transactional annotation on it  -->
    <tx:annotation-driven />

    <bean class="org.thlim.dao.impl.DefaultPlayerDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean class="org.thlim.dao.impl.DefaultTeamDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <bean class="org.thlim.dao.impl.DefaultGameDao">
        <property name="sessionFactory" ref="sessionFactory" />
    </bean>

    <!--
    =========================================================
    Shiro Components
    =========================================================
    -->

    <bean id="ShiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <property name="securityManager" ref="securityManager"/>
    </bean>

    <!-- Shiro's main business-tier object for web-enabled applications
         (use org.apache.shiro.web.DefaultWebSecurityManager instead when there is no web environment)-->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <!-- Single realm app (realm configured next, below).  If you have multiple realms, use the 'realms'
      property instead. -->
        <property name="realm" ref="scopedRoleRealm"/>
        <!-- Uncomment this next property if you want heterogenous session access or clusterable/distributable
             sessions.  The default value is 'http' which uses the Servlet container's HttpSession as the underlying
             Session implementation.
        <property name="sessionMode" value="shiro"/> -->
    </bean>

    <!-- Post processor that automatically invokes init() and destroy() methods -->
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor"/>

    <bean class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod" value="org.apache.shiro.SecurityUtils.setSecurityManager"/>
        <property name="arguments" ref="securityManager"/>
    </bean>
</beans>
